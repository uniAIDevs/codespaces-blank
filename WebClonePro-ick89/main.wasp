app WebClonePro {
  wasp: {
    version: "^0.11.4"
  },
  title: "WebClonePro",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx"
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id          Int          @id @default(autoincrement())
    username    String       @unique
    password    String
    clonedSites ClonedSite[]
psl=}

entity ClonedSite {=psl
    id            Int          @id @default(autoincrement())
    url           String
    selectedPages String
    clonedFiles   String
    user          User         @relation(fields: [userId], references: [id])
    userId        Int
    CloningLog    CloningLog[]
psl=}

entity CloningLog {=psl
    id           Int        @id @default(autoincrement())
    status       String
    timestamp    DateTime   @default(now())
    clonedSite   ClonedSite @relation(fields: [clonedSiteId], references: [id])
    clonedSiteId Int
psl=}

action createClonedSite {
  fn: import { createClonedSite } from "@server/actions.js",
  entities: [ClonedSite]
}

action updateCloningStatus {
  fn: import { updateCloningStatus } from "@server/actions.js",
  entities: [CloningLog]
}

query getClonedSites {
  fn: import { getClonedSites } from "@server/queries.js",
  entities: [ClonedSite]
}

query getCloningLogs {
  fn: import { getCloningLogs } from "@server/queries.js",
  entities: [CloningLog, ClonedSite]
}

route HomePageRoute { path: "/", to: HomePage }
page HomePage {
  component: import { HomePage } from "@client/pages/Home.jsx",
  authRequired: false
}

route CloningProgressRoute { path: "/cloningProgress/:clonedSiteId", to: CloningProgressPage }
page CloningProgressPage {
  component: import { CloningProgress } from "@client/pages/CloningProgress.jsx",
  authRequired: true
}

route ClonedSitesRoute { path: "/clonedSites", to: ClonedSitesPage }
page ClonedSitesPage {
  component: import { ClonedSites } from "@client/pages/ClonedSites.jsx",
  authRequired: true
}